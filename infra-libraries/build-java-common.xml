<project name="build-java-template" xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- PRE-CONDITIONS -->
	<fail message="Please build using Ant 1.8.0 or higher.">
		<condition><not><antversion atleast="1.8.0" /></not></condition>
	</fail>

	<!-- Configuration: overall. -->
	<dirname property="infra-libraries.dir" file="${ant.file.bootstrap-common}" />
	<property name="infra-libraries.ant.dir" value="${infra-libraries.dir}/ant"/>

	<!-- Ant Script dependencies -->
	<import file="${infra-libraries.dir}/ivy-common.xml"/>
	
	<!-- Configuration: build. -->
	<property file="${basedir}/build.properties" />
	<property file="${infra-libraries.dir}/build-java-common.properties" />
	<available file="${src.test.java.dir}" type="dir" property="src.test.java.exists" />
	<available file="${src.test.res.dir}" type="dir" property="src.test.res.exists" />
	<available file="${src.main.java.dir}" type="dir" property="src.main.java.exists" />
	<available file="${src.main.res.dir}" type="dir" property="src.main.res.exists"  />
	
	<!-- Public targets that hide private targets. -->
	<target name="default" depends="clean,publish" description="Publish fresh built jar artifact." />
	<target name="clean" depends="-clean-all" description="Delete artifacts and temporary files." />
	<target name="resolve" depends="-resolve-dependencies" description="Resolve artifact dependencies." />
	<target name="compile" depends="-compile-sources-main" description="Compile all sources."/>
	<target name="jar" depends="-compile-jar-main" description="Create jar artifact." />
	<target name="publish" depends="-publish-jar-main" description="Publish jar artifact" />

	<!-- Abstract targest to be inherited -->
	<target name="resolve-dependencies-before" />
	<target name="resolve-dependencies-after" />
	<target name="compile-sources-main-before" />
	<target name="compile-sources-main-after" />
	<target name="compile-jar-main-after" />
	<target name="compile-jar-main-before" />
	<target name="publish-jar-main-after" />
	<target name="publish-jar-main-before" />

	<!-- *** BUILD *** -->
	<target name="-clean-all" >
		<delete dir="${build.pub.dir}" />
		<delete dir="${build.bin.main.dir}" />
		<delete dir="${build.bin.test.dir}" />
		<delete dir="${build.bin.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="-resolve-dependencies" depends="-ivy-init,resolve-dependencies-before,-resolve-dependencies-impl,resolve-dependencies-after" />
	<target name="-resolve-dependencies-impl">
		<ivy:resolve showprogress="false" log="quiet" />
		<ivy:cachepath pathid="ivy.cachepath.compile.main" conf="default" type="jar" />
		<ivy:cachepath pathid="ivy.cachepath.compile.test" conf="default,test" type="jar" />
		<ivy:report conf="default" todir="${build.dir}" />
	</target>

	<target name="-compile-sources-main" depends="-resolve-dependencies,compile-sources-main-before,-compile-sources-main-impl,compile-sources-main-after" if="src.main.java.exists" />
	<target name="-compile-sources-main-impl" >
		<!-- Compile source files to classes directory. -->
		<mkdir dir="${build.bin.main.dir}" />
		<javac srcdir="${src.main.java.dir}" destdir="${build.bin.main.dir}"
			debug="${compile.debug}" debuglevel="${compile.debuglevel}"
			encoding="${compile.encoding}"
			target="${compile.target}" source="${compile.source}"
			includeAntRuntime="false">
			<classpath>
				<path refid="ivy.cachepath.compile.main" />
			</classpath>
		</javac>
	</target>

	<target name="-compile-sources-test" depends="-resolve-dependencies,-compile-sources-main" if="src.test.java.exists">
		<!-- Compile source files to (test) classes directory. -->
		<mkdir dir="${build.bin.test.dir}" />
		<javac srcdir="${src.test.java.dir}" destdir="${build.bin.test.dir}"
				debug="${compile.debug}" debuglevel="${compile.debuglevel}"
				encoding="${compile.encoding}"
				target="${compile.target}" source="${compile.source}"
				includeAntRuntime="false">
			<classpath>
				<fileset dir="${build.bin.main.dir}" erroronmissingdir="false" />
				<!--<dirset dir="${build.bin.main.dir}"  /> -->
				<path refid="ivy.cachepath.compile.test" />
			</classpath>
		</javac>
	</target>

	<target name="-compile-jar-main" depends="-compile-sources-main,compile-jar-main-before,-compile-jar-main-impl,compile-jar-main-after" />
	<target name="-compile-jar-main-impl">
		<mkdir dir="${build.pub.dir}"/>
		<property name="build.jar.file" value="${build.pub.dir}/${ivy.module}-${ivy.revision}.jar" />
		<jar destfile="${build.jar.file}">
			<manifest>
				<attribute name="ivy-organisation" value="${ivy.organisation}" />
				<attribute name="ivy-module" value="${ivy.module}" />
				<attribute name="ivy-revision" value="${ivy.version}" />
			</manifest>
			<fileset dir="${build.bin.main.dir}" />
			<fileset dir="${src.main.res.dir}" erroronmissingdir="false" />
		</jar>
	</target>
	
	<target name="-publish-jar-main" depends="-compile-jar-main,publish-jar-main-before,-publish-jar-main-impl,publish-jar-main-after" description="Publish artifacts to the library." />
	<target name="-publish-jar-main-impl" description="Publish artifacts to the library.">
		<ivy:publish artifactspattern="${build.pub.dir}/[artifact]-[revision].[ext]"
				resolver="infra-artifacts"
				forcedeliver="true" 
				overwrite="true"
				status="release" />
	</target>
</project>